version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lancerscape2-postgres
    environment:
      POSTGRES_DB: lancerscape2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - lancerscape2-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lancerscape2-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lancerscape2-network
    restart: unless-stopped

  # Backend API (optional - can be run separately)
  backend:
    build: .
    container_name: lancerscape2-backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=lancerscape2
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - lancerscape2-network
    restart: unless-stopped
    command: npm run dev

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: lancerscape2-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - lancerscape2-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  lancerscape2-network:
    driver: bridge 